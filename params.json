{"name":"Boxs-treatments","tagline":"BoXS example programs","body":"# Welcome!\r\nHere you find short descriptions for the example programs\r\n\r\n### 'RiskyChoice.boxs'\r\nAppendix x shows a sample for a risky choice programm using the (deprecated) google charts api, to present the gambles visually. Here we firstly made use of a new function, namely 'recordKeys()', in BoXS. This let us continue to the next stage by pressing a predefined key (e.g. 'Enter', 'Space', 'C',...), instead of using the mouse to press the wait() button. The gambles are hard coded into an array structure, which is then accessed randomly via an index array 'shuffle'. We shuffled the index array via a bubblesort like algorithm, which needs at least nGambles/2 iterations to allow every possible permutation to occur. The generated charts are loaded into an html table for a conforming and easy to adopt visualization of the stages. The decision time for each task is measured precisely in miliseconds and can be used for further analysis. \r\n\r\n\r\n###  'PrisonersDilemmaBaseStructure.boxs' \r\nAppendix y shows an easy to implement prisoners dilemma programm which allows complete control of an Eyetracker by only using four commands. The game is divided in a stage for the very first round presenting the instructions, the games between the players and a last round indicating the overall win. A stranger matching ensures anonymity - perfect stranger matching can be used, too, but remember, that the number of rounds depends strongly on the number of participants available - The stages are presented in form of html tables. This shortens the amount of code and enhances its readibilty. Using the eyetracking feature consists of the following procedure: \r\n1. initialising the connection - eyetrackerInitialise(\"localhost\",4444,5555), \r\n2. performing the calibration - eyetrackerCalibrate(), \r\n3. starting the recording - eyetrackerStart(120, filename), \r\n4. sending trigger to indicate events in BoXS - eyetrackerTrigger(\"Trigger Name\") and last but not least\r\n5. stopping the eyetracker - eyetrackerStop(). We use eyetracking only for player 'S1', but this can easily be expanded to as many player as eyetracker are available.\r\n\r\n\r\n### 'paper example.boxs'\r\nAppendix z shows a public good game in its shortest form in BoXS. It consists of a mood induction video (converted to gif, as the video function is not working properly), full eyetracker usage, a graphical visualization of the contributions and a stranger multiplayer enviroment for a four player PGG in only 58 lines of code (without comments and newlines).\r\n\r\n\r\n### Authors and Contributors\r\n2013 - Mirko Seithe, Andreas Glöckner and Jeronim Morina (@plattenschieber) \r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://boxs.uni-bonn.de/documentation/index.html or contact morina@coll.mpg.de and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}